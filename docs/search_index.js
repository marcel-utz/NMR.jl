var documenterSearchIndex = {"docs":
[{"location":"Home/#NMR.jl","page":"NMR.jl","title":"NMR.jl","text":"","category":"section"},{"location":"Home/","page":"NMR.jl","title":"NMR.jl","text":"A set of tools for processing, plotting, and interpreting NMR data","category":"page"},{"location":"Home/#Package-Features","page":"NMR.jl","title":"Package Features","text":"","category":"section"},{"location":"Home/","page":"NMR.jl","title":"NMR.jl","text":"Reading and processing NMR data from JEOL, Bruker, and Varian/Agilent Spectrometers\nSimulations of Spin dynamics based on efficient sparse matrix representations of the spin Hamiltonian and density operator\nSome specialised and advanced tools for data interpretation in the context of metabolomics","category":"page"},{"location":"Home/#Manual-Outline","page":"NMR.jl","title":"Manual Outline","text":"","category":"section"},{"location":"Home/","page":"NMR.jl","title":"NMR.jl","text":"If you would like to jump right in, read the Getting started section. For a more in-depth and complete documentation, refer to the Manual. Finally, a complete list and documentation of every function  can be found under API.","category":"page"},{"location":"Home/#Feedback","page":"NMR.jl","title":"Feedback","text":"","category":"section"},{"location":"Home/","page":"NMR.jl","title":"NMR.jl","text":"NMR.jlis still under active development, and we would appreciate your feedback, including feature requests, bug reports, and general comments. Please contact marcel.utz@kit.edu by email.","category":"page"},{"location":"Home/#Citing-NMR.jl","page":"NMR.jl","title":"Citing NMR.jl","text":"","category":"section"},{"location":"Home/","page":"NMR.jl","title":"NMR.jl","text":"If you publish your work and have been using NMR.jl to process, present, and/or interpret your data, we would appreciate if you could acknowledge this by citing our work. The reference is TBA.","category":"page"},{"location":"About/#About-NMR.jl","page":"About NMR.jl","title":"About NMR.jl","text":"","category":"section"},{"location":"About/","page":"About NMR.jl","title":"About NMR.jl","text":"NMR.jl is a library of tools for the processing, plotting, and interpretation of NMR data. The project started out as an internal quick-and-dirty set of tools in the Utz research laboratory at the University of Southampton. At the time, Julia was in a very early stage, and its use was experimental. In the meantime, a sizeable number of research projects have been carried out in the group using early versions of NMR.jl, and it seemed like a good idea to complete the tools and the documentation, and make the package available to the community.","category":"page"},{"location":"About/","page":"About NMR.jl","title":"About NMR.jl","text":"note: Applications\nNMR.jl is intended to be applicable to any kind of NMR data, and aims at implementing a broad set of features to enable even advanced NMR data processing. Some of its functionality is designed for convenience, making everyday tasks  accessible with a reasonable default set of parameters. Power users may want to use the more low-level routines, which are underlying the high-level interface.","category":"page"},{"location":"NMR-1.0/#Roadmap-to-Version-1.0","page":"Roadmap to Version 1.0","title":"Roadmap to Version 1.0","text":"","category":"section"},{"location":"NMR-1.0/","page":"Roadmap to Version 1.0","title":"Roadmap to Version 1.0","text":"This is a roadmap towards publishing NMR.jl first for internal use, and then  to the wider community.","category":"page"},{"location":"NMR-1.0/","page":"Roadmap to Version 1.0","title":"Roadmap to Version 1.0","text":"In its current state, NMR.jlis a package of tools that have been designed for only internal use. Most of it is not properly documented. The data structures have not been thought through carefully, but have mostly just grown as things went along.","category":"page"},{"location":"NMR-1.0/","page":"Roadmap to Version 1.0","title":"Roadmap to Version 1.0","text":"For professional use, a few requirements are imperative:","category":"page"},{"location":"NMR-1.0/","page":"Roadmap to Version 1.0","title":"Roadmap to Version 1.0","text":"good documentation, including a set of example data\nclean integration into the Julia universe\nData types\nPlots\nInput and output; IJulia etc\nwell thought-out NMRData type\nseamless integration of spectral analysis and simulation tools\nloading multiple vendor data formats\nproper handling of metadata","category":"page"},{"location":"NMR-1.0/","page":"Roadmap to Version 1.0","title":"Roadmap to Version 1.0","text":"The current roadmap for development is shown in the following table:","category":"page"},{"location":"NMR-1.0/","page":"Roadmap to Version 1.0","title":"Roadmap to Version 1.0","text":"Version Planned features Target release date\n0.9.0 cleanup, document basic functionality, how-to documentation for simple spectral processing 22.1.2025\n0.10.0 new data structures, transform, plots 31.1.2025\n0.11.0 new vendor and metadata support 28.2.2025\n0.12.0 integration of AI processing 31.3.2025\n0.13.0 complete documentation 15.4.2025","category":"page"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Example-documentation","page":"Home","title":"Example documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"    NMR\n    FourierTransform","category":"page"},{"location":"#NMR","page":"Home","title":"NMR","text":"module NMR\n\nprovides routines for processing 1D NMR spectra, as well as for simple Hilbert space spin dynamics simulations. \n\nVersion History\n\nv0.9.0\n\nadded JEOL data reading\n\nv0.8.0\n\nadded GISSMO library interface\n\nv0.7.1\n\nadded readBrukerParameterFile()\n\nv0.6.5\n\nadded medianBaseline() for baseline correction\nadded an entry for DSS in the HMDB table\n\n\n\n\n\n","category":"module"},{"location":"#NMR.FourierTransform","page":"Home","title":"NMR.FourierTransform","text":"FourierTransform(d::Data1D)\n\nperforms an FFT assuming that the input data set d is a free induction decay, and returns a DataSet object with the resulting complex data.\n\n\n\n\n\n","category":"function"},{"location":"Manual/#User-Manual","page":"User Manual","title":"User Manual","text":"","category":"section"},{"location":"Manual/#Getting-started","page":"User Manual","title":"Getting started","text":"","category":"section"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"NMR.jl is a Julia package. It is installed using the Julia package management system:","category":"page"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"using Pkg\nPkg.add(url=\"https://github.com/marcel-utz/NMR.jl\")","category":"page"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"Once the install finishes, you are ready to go.","category":"page"},{"location":"Manual/#Loading-NMR-Data","page":"User Manual","title":"Loading NMR Data","text":"","category":"section"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"To start processing, you need to load some NMR data. There are commands to load raw data from various spectrometer vendors. Typically, the data is loaded raw. This means that only the time-domain spectral data is returned, and you have to manually convert it to a data object that can be further processed.","category":"page"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"Here is an example:","category":"page"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"ENV[\"GKSwstype\"] = \"100\" # hide\nimport NMR\nimport Plots # hide\n\nf=NMR.readBrukerFID(\"../../test/data/10/fid\")","category":"page"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"freturns an array with the complex data points contained in the  fid file. To convert this to useable time-domain data,  you need to convert it into a Data1D object. ","category":"page"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"    Data1D","category":"page"},{"location":"Manual/#NMR.Data1D","page":"User Manual","title":"NMR.Data1D","text":"Data1D(f<:AbstractArray,start<:Real,stop<:Real)\n\nreturns a data structure to hold a 1D NMR dataset either in the time or the frequency domain. Data1D objects store an index (range of time points or frequency points) along with the corresponding y-axis data. Data1D objects can be added and subtracted from one another, as long as their  indices match.\n\n\n\n\n\n","category":"type"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"We assume that the data represents a free induction decay with a total duration of 1 second.","category":"page"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"d=NMR.Data1D(f,0.0,1.0)\nNMR.plot(real(d))\nPlots.savefig(\"plot.svg\"); nothing # hide","category":"page"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"(Image: )","category":"page"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"spect=NMR.FourierTransform(d,PPM=700, CTR=4.76)\nNMR.plot(real(spect),xaxis=:flip)\nPlots.savefig(\"plot-spec.svg\"); nothing # hide","category":"page"},{"location":"Manual/","page":"User Manual","title":"User Manual","text":"(Image: )","category":"page"}]
}
